// <auto-generated />
using System;
using EasyMoto.src.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace EasyMoto.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EasyMoto.Domain.Entities.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_CLIENTE");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<string>("CpfCliente")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("CPF_CLIENTE");

                    b.Property<string>("EmailCliente")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("EMAIL_CLIENTE");

                    b.Property<string>("NomeCliente")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NOME_CLIENTE");

                    b.Property<string>("TelefoneCliente")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("TELEFONE_CLIENTE");

                    b.HasKey("IdCliente");

                    b.ToTable("CLIENTE");
                });

            modelBuilder.Entity("EasyMoto.Domain.Entities.ClienteLocacao", b =>
                {
                    b.Property<int>("IdLocacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_LOCACAO");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLocacao"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("CLIENTE_ID");

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATA_FIM");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATA_INICIO");

                    b.Property<string>("StatusLocacao")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("STATUS_LOCACAO");

                    b.HasKey("IdLocacao");

                    b.HasIndex("ClienteId");

                    b.ToTable("CLIENTE_LOCACAO");
                });

            modelBuilder.Entity("EasyMoto.Domain.Entities.Empresa", b =>
                {
                    b.Property<int>("IdEmpresa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_EMPRESA");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEmpresa"));

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("CNPJ");

                    b.Property<string>("NomeEmpresa")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NOME_EMPRESA");

                    b.HasKey("IdEmpresa");

                    b.ToTable("EMPRESA");
                });

            modelBuilder.Entity("EasyMoto.Domain.Entities.Filial", b =>
                {
                    b.Property<int>("IdFilial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_FILIAL");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFilial"));

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("CIDADE");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("EMPRESA_ID");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ENDERECO");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ESTADO");

                    b.Property<string>("NomeFilial")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NOME_FILIAL");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("PAIS");

                    b.HasKey("IdFilial");

                    b.HasIndex("EmpresaId");

                    b.ToTable("FILIAL");
                });

            modelBuilder.Entity("EasyMoto.Domain.Entities.Funcionario", b =>
                {
                    b.Property<int>("IdFunc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_FUNC");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFunc"));

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("CARGO");

                    b.Property<string>("CpfFunc")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("CPF_FUNC");

                    b.Property<string>("EmailFunc")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("EMAIL_FUNC");

                    b.Property<int>("FilialId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("FILIAL_ID");

                    b.Property<string>("NomeFunc")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NOME_FUNC");

                    b.Property<string>("TelefoneFunc")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("TELEFONE_FUNC");

                    b.HasKey("IdFunc");

                    b.HasIndex("FilialId");

                    b.ToTable("FUNCIONARIO");
                });

            modelBuilder.Entity("EasyMoto.Domain.Entities.Localizacao", b =>
                {
                    b.Property<int>("IdLocalizacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_LOCALIZACAO");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLocalizacao"));

                    b.Property<DateTime?>("DataHora")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATA_HORA");

                    b.Property<double?>("Latitude")
                        .HasColumnType("BINARY_DOUBLE")
                        .HasColumnName("LATITUDE");

                    b.Property<double?>("Longitude")
                        .HasColumnType("BINARY_DOUBLE")
                        .HasColumnName("LONGITUDE");

                    b.Property<string>("StatusLoc")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("STATUS_LOC");

                    b.Property<string>("ZonaVirtual")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ZONA_VIRTUAL");

                    b.HasKey("IdLocalizacao");

                    b.ToTable("LOCALIZACAO");
                });

            modelBuilder.Entity("EasyMoto.Domain.Entities.Moto", b =>
                {
                    b.Property<int>("IdMoto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_MOTO");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMoto"));

                    b.Property<int>("AnoFabricacao")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ANO_FABRICACAO");

                    b.Property<int>("LocacaoId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("LOCACAO_ID");

                    b.Property<int>("LocalizacaoId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("LOCALIZACAO_ID");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("MODELO");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("PLACA");

                    b.Property<string>("StatusMoto")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("STATUS_MOTO");

                    b.HasKey("IdMoto");

                    b.HasIndex("LocacaoId");

                    b.HasIndex("LocalizacaoId");

                    b.ToTable("MOTO");
                });

            modelBuilder.Entity("EasyMoto.Domain.Entities.Operador", b =>
                {
                    b.Property<int>("IdOperador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_OPERADOR");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOperador"));

                    b.Property<string>("CpfOpr")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("CPF_OPR");

                    b.Property<string>("EmailOpr")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("EMAIL_OPR");

                    b.Property<int>("FilialId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("FILIAL_ID");

                    b.Property<string>("NomeOpr")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NOME_OPR");

                    b.Property<string>("TelefoneOpr")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("TELEFONE_OPR");

                    b.HasKey("IdOperador");

                    b.HasIndex("FilialId");

                    b.ToTable("OPERADOR");
                });

            modelBuilder.Entity("EasyMoto.Domain.Entities.Patio", b =>
                {
                    b.Property<int>("IdPatio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_PATIO");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPatio"));

                    b.Property<string>("Andar")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ANDAR");

                    b.Property<int>("FilialId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("FILIAL_ID");

                    b.Property<string>("NomePatio")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NOME_PATIO");

                    b.Property<string>("TamanhoPatio")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("TAMANHO_PATIO");

                    b.HasKey("IdPatio");

                    b.HasIndex("FilialId");

                    b.ToTable("PATIO");
                });

            modelBuilder.Entity("EasyMoto.Domain.Entities.Vaga", b =>
                {
                    b.Property<int>("IdVaga")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_VAGA");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVaga"));

                    b.Property<string>("Coluna")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("COLUNA");

                    b.Property<string>("Fileira")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("FILEIRA");

                    b.Property<int>("MotoId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("MOTO_ID");

                    b.Property<int>("PatioId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("PATIO_ID");

                    b.Property<string>("StatusVaga")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("STATUS_VAGA");

                    b.HasKey("IdVaga");

                    b.HasIndex("MotoId");

                    b.HasIndex("PatioId");

                    b.ToTable("VAGA");
                });

            modelBuilder.Entity("EasyMoto.Domain.Entities.ClienteLocacao", b =>
                {
                    b.HasOne("EasyMoto.Domain.Entities.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("EasyMoto.Domain.Entities.Filial", b =>
                {
                    b.HasOne("EasyMoto.Domain.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("EasyMoto.Domain.Entities.Funcionario", b =>
                {
                    b.HasOne("EasyMoto.Domain.Entities.Filial", "Filial")
                        .WithMany()
                        .HasForeignKey("FilialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Filial");
                });

            modelBuilder.Entity("EasyMoto.Domain.Entities.Moto", b =>
                {
                    b.HasOne("EasyMoto.Domain.Entities.ClienteLocacao", "ClienteLocacao")
                        .WithMany()
                        .HasForeignKey("LocacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EasyMoto.Domain.Entities.Localizacao", "Localizacao")
                        .WithMany()
                        .HasForeignKey("LocalizacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClienteLocacao");

                    b.Navigation("Localizacao");
                });

            modelBuilder.Entity("EasyMoto.Domain.Entities.Operador", b =>
                {
                    b.HasOne("EasyMoto.Domain.Entities.Filial", "Filial")
                        .WithMany()
                        .HasForeignKey("FilialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Filial");
                });

            modelBuilder.Entity("EasyMoto.Domain.Entities.Patio", b =>
                {
                    b.HasOne("EasyMoto.Domain.Entities.Filial", "Filial")
                        .WithMany()
                        .HasForeignKey("FilialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Filial");
                });

            modelBuilder.Entity("EasyMoto.Domain.Entities.Vaga", b =>
                {
                    b.HasOne("EasyMoto.Domain.Entities.Moto", "Moto")
                        .WithMany()
                        .HasForeignKey("MotoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EasyMoto.Domain.Entities.Patio", "Patio")
                        .WithMany()
                        .HasForeignKey("PatioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Moto");

                    b.Navigation("Patio");
                });
#pragma warning restore 612, 618
        }
    }
}
